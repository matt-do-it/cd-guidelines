@use "sass:math";
@use "sass:map";

$font-family: "Helvetica Neue" !default;
$font-size: 14px !default;
$font-weight: 300 !default;

$line-height: math.round($font-size * 1.6) !default;

$font-size-large: 18px !default;
$font-weight-large: 300 !default;

$line-height-large: math.round($font-size-large * 1.6) !default;

$color-secondary: rgb(125, 135, 144) !default;
$color-tertiary: rgb(239, 239, 239) !default;
$color-default: black !default;
$color-highlight: rgb(0, 142, 214) !default;
$color-lines: rgb(240, 240, 240) !default;

$site-top-height: 120px !default;
$site-top-small-height: 60px !default;

$site-title-font-size: math.round($font-size * 1.7) !default;
$site-title-small-font-size: math.round($font-size * 1.3) !default;

$site-logo-small-aspect-ratio: 1 !default;
$site-logo-aspect-ratio: 1 !default;

$site-top-leading-space: 10px !default;
$site-top-trailing-space: 10px !default;

$site-top-small-leading-space: 10px !default;
$site-top-small-trailing-space: 10px !default;

$site-graphic-height: 15px !default;

$print-font-size: 11pt;

$default-transition-easing: cubic-bezier(0.38, 0.04, 0.35, 0.96);
$default-transition-timing: 250ms;

$media-query: (
  small: "(min-width: 0px) and (max-width: 1003px)",
  large: "(min-width: 1004px)",
) !default;

$page-width: (
  small: 320px,
  large: 978px,
) !default;

$page-gutter: (
  small: 10px,
  large: 10px,
) !default;

$element-gutter: (
  small: 3px,
  large: 3px,
) !default;

$menu-item-small-horizontal-space: page-gutter("small");
$menu-item-small-leading-space: 10px;
$menu-item-small-trailing-space: 10px;

$menu-item-small-font-family: $font-family;
$menu-item-small-font-size: math.round($font-size * 1.15);
$menu-item-small-color: $color-default;

$menu-item-small-color-highlight: $color-highlight;

$menu-item-large-horizontal-space: 8px;
$menu-item-large-leading-space: 10px;
$menu-item-large-trailing-space: 10px;

$menu-item-large-font-family: $font-family;
$menu-item-large-font-size: math.round($font-size * 1.15);
$menu-item-large-color: $color-default;

$menu-item-small-color-highlight: $color-highlight;

@function page-width($breakpoint) {
  @return map.get($page-width, $breakpoint);
}

@function page-gutter($breakpoint) {
  @return map.get($page-gutter, $breakpoint);
}

@function element-gutter($breakpoint) {
  @return map.get($element-gutter, $breakpoint);
}

@function grid-element-width($breakpoint, $part-of-twelve) {
  @return calc(
    (
        (map.get($page-width, $breakpoint) + 2 * element-gutter($breakpoint)) /
          12 * $part-of-twelve
      ) - 2 * element-gutter($breakpoint)
  );
}

@mixin clearfix {
  &:after {
    content: "\0020";
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
    clear: both;
    zoom: 1;
  }
}

@mixin content-block {
  @include clearfix;
}

@mixin img-responsive {
  & img {
    width: 100%;
    height: auto;
    display: block;
  }
}

@mixin content-block-responsive($breakpoint) {
  @include media-breakpoint($breakpoint) {
    margin-left: page-gutter($breakpoint);
    margin-right: page-gutter($breakpoint);

    @include content-block;
  }
}

@mixin content-block-hero($breakpoint) {
  @include media-breakpoint($breakpoint) {
    width: 100%;
    margin-right: 0px;
    margin-left: 0px;

    @include content-block;
  }
}

@mixin content-block-fixed($breakpoint) {
  @include media-breakpoint($breakpoint) {
    margin-left: auto;
    margin-right: auto;

    width: ((map.get($page-width, $breakpoint)));

    @include content-block;
  }
}

@mixin content-block-fixed-sized($breakpoint, $size) {
  @include media-breakpoint($breakpoint) {
    margin-left: auto;
    margin-right: auto;

    width: math.ceil(grid-element-width($breakpoint, $size));

    @include content-block;
  }
}

@mixin content-block-grid($breakpoint) {
  @include content-block-fixed-grid($breakpoint);
}

@mixin content-block-fixed-grid($breakpoint) {
  @include media-breakpoint($breakpoint) {
    @include content-block;

    padding: 0px 0px;

    @include clearfix;

    margin-left: auto;
    margin-right: auto;

    width: calc(
      map.get($page-width, $breakpoint) + 2 * element-gutter($breakpoint)
    );
  }
}

@mixin content-block-responsive-grid($breakpoint) {
  @include media-breakpoint($breakpoint) {
    margin-left: page-gutter($breakpoint) - element-gutter($breakpoint);
    margin-right: page-gutter($breakpoint) - element-gutter($breakpoint);
    padding: 0px 0px;

    @include content-block;

    @include clearfix;
  }
}

@mixin grid-element($breakpoint, $part-of-twelve) {
  @include grid-element-fixed($breakpoint, $part-of-twelve);
}

@mixin grid-element-fixed($breakpoint, $part-of-twelve) {
  @include media-breakpoint($breakpoint) {
    display: inline-block;
    float: left;
    position: relative;

    margin-left: element-gutter($breakpoint);
    margin-right: element-gutter($breakpoint);

    width: calc(
      (
          (map.get($page-width, $breakpoint) + 2 * element-gutter($breakpoint)) /
            12 * $part-of-twelve
        ) - 2 * element-gutter($breakpoint)
    );
  }
}

@mixin grid-element-responsive($breakpoint, $part-of-twelve) {
  @include media-breakpoint($breakpoint) {
    display: inline-block;
    float: left;
    position: relative;

    margin-left: element-gutter($breakpoint);
    margin-right: element-gutter($breakpoint);

    width: calc(
      (100% / 12 * $part-of-twelve) - 2 * element-gutter($breakpoint)
    );
  }
}

@mixin grid-element-spaced($breakpoint, $part-of-twelve, $left, $right) {
  @include media-breakpoint($breakpoint) {
    display: inline-block;
    float: left;
    position: relative;

    margin-left: calc(
      (
          (map.get($page-width, $breakpoint) + 2 * element-gutter($breakpoint)) /
            12 * $left
        ) + element-gutter($breakpoint)
    );
    margin-right: calc(
      (
          (map.get($page-width, $breakpoint) + 2 * element-gutter($breakpoint)) /
            12 * $right
        ) + element-gutter($breakpoint)
    );

    width: calc(
      (
          (map.get($page-width, $breakpoint) + 2 * element-gutter($breakpoint)) /
            12 * $part-of-twelve
        ) - 2 * element-gutter($breakpoint)
    );
  }
}

@mixin content-block-grid-hero($breakpoint) {
  @include media-breakpoint($breakpoint) {
    @include content-block;
    @include clearfix;

    display: block;

    position: relative;

    margin-left: 0%;
    margin-right: 0%;

    width: 100%;

    padding: 0px 0px;
  }
}

@mixin grid-hero-element($breakpoint, $part-of-twelve) {
  @include media-breakpoint($breakpoint) {
    float: left;

    display: inline;
    position: relative;

    margin-left: 0px;
    margin-right: 0px;

    width: calc(100% * ($part-of-twelve/12));
  }
}

@mixin media-breakpoint($breakpoint) {
  @media #{map.get($media-query, $breakpoint)} {
    @content;
  }
}

@mixin basetransition {
  transition-duration: 0.4s;
  transition-timing-function: cubic-bezier(0.38, 0.04, 0.35, 0.96);
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
